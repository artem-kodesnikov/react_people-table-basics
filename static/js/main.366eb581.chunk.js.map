{"version":3,"sources":["components/Navigation.tsx","Page/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","Page/PeoplePage.tsx","Page/PageNotFound.tsx","App.tsx","index.tsx"],"names":["Navigation","className","role","isActive","classNames","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","setSelectedPerson","name","sex","onClick","slug","PeopleTable","useState","people","setPeople","isLoading","setIsLoading","selectedPerson","useEffect","peopleFromServer","findParents","parentName","parent","find","map","born","died","motherName","fatherName","PeoplePage","PageNotFound","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.366eb581.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n  setSelectedPerson: (value: string) => void\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, setSelectedPerson }) => {\n  const handleClick = (slug: string) => {\n    setSelectedPerson(slug);\n  };\n\n  return (\n    <Link\n      to={`../${person.name}`}\n      className={classNames(\n        { 'has-text-danger': person.sex === 'f' },\n      )}\n      onClick={() => handleClick(person.slug)}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PersonLink } from './PersonLink';\n\nexport const PeopleTable: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedPerson, setSelectedPerson] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(peopleFromServer => {\n        setPeople(peopleFromServer);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const handleClick = (slug: string) => {\n    setSelectedPerson(slug);\n  };\n\n  const findParents = (parentName: string | null) => {\n    const parent = people?.find(({ name }) => name === parentName);\n\n    return parent\n      ? (\n        <Link\n          to={`../${parentName}`}\n          className={classNames(\n            { 'has-text-danger': parent.sex === 'f' },\n          )}\n          onClick={() => handleClick(parent.slug)}\n        >\n          {parentName}\n        </Link>\n      )\n      : (\n        parentName\n      );\n  };\n\n  return (\n    <div className=\"box table-container\">\n      {isLoading\n        ? (\n          <Loader />\n        )\n        : (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map((person) => (\n                <tr\n                  data-cy=\"person\"\n                  className={classNames(\n                    {\n                      'has-background-warning': selectedPerson === person.slug,\n                    },\n                  )}\n                >\n                  <td>\n                    <PersonLink\n                      person={person}\n                      setSelectedPerson={setSelectedPerson}\n                    />\n                  </td>\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n                  <td>{findParents(person.motherName) || '-'}</td>\n                  <td>{findParents(person.fatherName) || '-'}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n\n    </div>\n  );\n};\n","// import { useParams } from \"react-router-dom\"\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable />\n    </>\n  );\n};\n","export const PageNotFound = () => {\n  return (\n    <p>Page not found</p>\n  );\n};\n","// import { Loader } from './components/Loader';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\n\nimport './App.scss';\nimport { HomePage } from './Page/HomePage';\nimport { PeoplePage } from './Page/PeoplePage';\nimport { PageNotFound } from './Page/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"people\">\n            <Route\n              index\n              element={<PeoplePage />}\n            />\n\n            <Route\n              path=\":selectedPerson\"\n              element={\n                <PeoplePage />\n              }\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<PageNotFound />}\n          />\n\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}